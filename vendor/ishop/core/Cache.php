<?php
// класс для кэширования - снижает нагрузку на БД
// реализует паттерн Singletone
// например, формирование меню (каталога/категорий) - взятие данных из БД и рекурсия (проход нескольких циклов в одном цикле)
// формируем меню 1 раз и записываем в кэш - при повторном обращении к сайту берем его из кэша или формируем из БД и записываем в кэш

namespace ishop;

class Cache {

    use \ishop\traits\T_Singletone; // шаблон Одининочка

    // запись в кэш
    public function set(string $key, $data, int $seconds = 3600): bool {
        // $key - уникальное имя файла кэша
        // $data - данные для кэширования
        // $seconds - время кэширования данных в сек (на 1ч)
        // если время кэширования > 0 - кэшируем данные (в целях тестирования ставится в 0, чтобы временно не кэшировать данные)
        if ($seconds) {
            $content['data'] = $data; // записываем переданные данные в массив
            $content['end_time'] = time() + $seconds; // записываем в массив конечное время кэширования (текущие время + время кэша)
            // записываем данные в кэш
            // md5($key) - хэшируем ключ имени кэша
            // serialize($content) - сериализует весь контент (переводит в строковый формат)
            if (file_put_contents(CACHE . '/' . md5($key) . '.txt', serialize($content))) {
                return true;
            }
        }
        return false;
    }

    // получение кэша
    public function get(string $key) {
        $file = CACHE . '/' . md5($key) . '.txt'; // путь к файлу кэша по ключу
        // если файл существует вынимает контент из кэша
        if (file_exists($file)) {
            $content = unserialize(file_get_contents($file)); // десериализуем контент из файла (преобразовываем из строки в массив)
            // проверяем не устарели ли данные в кэше и возвращаем их, иначе удаляем файл
            if (time() <= $content['end_time']) {
                return $content['data'];
            }
            unlink($file);
        }
        return false;
    }

    // удаление/очистка кэша
    public function delete(string $key): void {
        $file = CACHE . '/' . md5($key) . '.txt'; // путь к файлу кэша по ключу
        // если файл существует, удаляем его
        if (file_exists($file)) {
            unlink($file);
        }
    }

}
